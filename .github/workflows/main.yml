name: Azure Resource Creation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  create-resource:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Log in to Azure
    #- name: Azure Login
    #  uses: azure/login@v1
     # with:
     #   creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 2: login without action Install Azure CLI
    - name: Install Azure CLI
      run: |
        sudo apt-get update
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    # Step 3: Log in to Azure using Service Principal
    - name: Azure CLI Login
      run: |
        az login --service-principal \
          --username ${{ secrets.AZURE_CLIENT_ID }} \
          --password ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    # Step 3: Create a Resource Group and Storage Account using Azure CLI
    - name: Create Azure Resources
      run: |
        # Set variables
        RESOURCE_GROUP="test-action-created-1"
        LOCATION="germanywestcentral"

        echo "Creating resource group: $RESOURCE_GROUP in $LOCATION"
        resExist=$(az group exists --name $RESOURCE_GROUP)
        
        if [ "$resExist" = true ]; then
          echo "resource group $RESOURCE_GROUP already exists"
        else
          az group create --name $RESOURCE_GROUP --location $LOCATION
          echo "Created resource group: $RESOURCE_GROUP in $LOCATION"
        fi
      shell: bash

    - name: Run Script with Secrets
      shell: pwsh
      run: |
        $scriptPath = "${{ vars.REG_SCRIPT_PATH }}"
        chmod +x $scriptPath
        pwsh ${{ vars.REG_SCRIPT_PATH }}
